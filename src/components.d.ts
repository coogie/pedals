/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface AppHome {}
  interface PedalBoard {}
  interface PedalBoost {}
  interface PedalChorus {}
  interface PedalKnob {
    'label': string;
    'max': number;
    'min': number;
    'step': string;
    'value': number;
  }
  interface PedalOverdrive {}
  interface PedalStomp {
    'isActive': boolean;
  }
}

declare global {


  interface HTMLAppHomeElement extends Components.AppHome, HTMLStencilElement {}
  var HTMLAppHomeElement: {
    prototype: HTMLAppHomeElement;
    new (): HTMLAppHomeElement;
  };

  interface HTMLPedalBoardElement extends Components.PedalBoard, HTMLStencilElement {}
  var HTMLPedalBoardElement: {
    prototype: HTMLPedalBoardElement;
    new (): HTMLPedalBoardElement;
  };

  interface HTMLPedalBoostElement extends Components.PedalBoost, HTMLStencilElement {}
  var HTMLPedalBoostElement: {
    prototype: HTMLPedalBoostElement;
    new (): HTMLPedalBoostElement;
  };

  interface HTMLPedalChorusElement extends Components.PedalChorus, HTMLStencilElement {}
  var HTMLPedalChorusElement: {
    prototype: HTMLPedalChorusElement;
    new (): HTMLPedalChorusElement;
  };

  interface HTMLPedalKnobElement extends Components.PedalKnob, HTMLStencilElement {}
  var HTMLPedalKnobElement: {
    prototype: HTMLPedalKnobElement;
    new (): HTMLPedalKnobElement;
  };

  interface HTMLPedalOverdriveElement extends Components.PedalOverdrive, HTMLStencilElement {}
  var HTMLPedalOverdriveElement: {
    prototype: HTMLPedalOverdriveElement;
    new (): HTMLPedalOverdriveElement;
  };

  interface HTMLPedalStompElement extends Components.PedalStomp, HTMLStencilElement {}
  var HTMLPedalStompElement: {
    prototype: HTMLPedalStompElement;
    new (): HTMLPedalStompElement;
  };
  interface HTMLElementTagNameMap {
    'app-home': HTMLAppHomeElement;
    'pedal-board': HTMLPedalBoardElement;
    'pedal-boost': HTMLPedalBoostElement;
    'pedal-chorus': HTMLPedalChorusElement;
    'pedal-knob': HTMLPedalKnobElement;
    'pedal-overdrive': HTMLPedalOverdriveElement;
    'pedal-stomp': HTMLPedalStompElement;
  }
}

declare namespace LocalJSX {
  interface AppHome extends JSXBase.HTMLAttributes<HTMLAppHomeElement> {}
  interface PedalBoard extends JSXBase.HTMLAttributes<HTMLPedalBoardElement> {}
  interface PedalBoost extends JSXBase.HTMLAttributes<HTMLPedalBoostElement> {}
  interface PedalChorus extends JSXBase.HTMLAttributes<HTMLPedalChorusElement> {}
  interface PedalKnob extends JSXBase.HTMLAttributes<HTMLPedalKnobElement> {
    'label'?: string;
    'max'?: number;
    'min'?: number;
    'onRotate'?: (event: CustomEvent<any>) => void;
    'step'?: string;
    'value'?: number;
  }
  interface PedalOverdrive extends JSXBase.HTMLAttributes<HTMLPedalOverdriveElement> {}
  interface PedalStomp extends JSXBase.HTMLAttributes<HTMLPedalStompElement> {
    'isActive'?: boolean;
    'onStomp'?: (event: CustomEvent<any>) => void;
  }

  interface IntrinsicElements {
    'app-home': AppHome;
    'pedal-board': PedalBoard;
    'pedal-boost': PedalBoost;
    'pedal-chorus': PedalChorus;
    'pedal-knob': PedalKnob;
    'pedal-overdrive': PedalOverdrive;
    'pedal-stomp': PedalStomp;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements extends LocalJSX.IntrinsicElements {}
  }
}


